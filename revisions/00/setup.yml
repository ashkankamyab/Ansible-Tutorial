---
- hosts: all
  become: true
  become_user: root
  remote_user: vagrant
  gather_facts: True
  tasks:

    - name: Wait for ssh to be up
      become: false
      wait_for:
        port: 22
        delay: 5
        connect_timeout: 5
        timeout: 360
        host: "{{ ansible_host }}"
      delegate_to: localhost

    - name: Update OS
      raw: apt-get update && apt-get upgrade -qq
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Installs python
      raw: apt-get update && apt-get install -y python3 python3-pip
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Update OS
      raw: yum -y update && yum -y install epel-release 
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

    - name: Installs python
      raw: yum -y update && yum -y install python3 python3-pip bind-utils
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

    - name: Creates destination directory
      file:
        state: directory
        mode: 0700
        dest: /root/.ssh/

    - name: Pushes user's rsa key to root's vagrant box (it's ok if this TASK fails)
      copy:
        src: ~/.ssh/id_rsa.pub
        dest: /root/.ssh/authorized_keys
        owner: root
        mode: 0600
      register: rsa
      ignore_errors: true

    - name: Pushes user's dsa key to root's vagrant box (it's NOT ok if both TASKs fail)
      copy:
        src: ~/.ssh/id_dsa.pub
        dest: /root/.ssh/authorized_keys
        owner: root
        mode: 0600
      when: rsa is failed

    - name: Checks if resolver is working properly (issues with some VBox/Host OS combinations)
      command: host -t A ansible.cc
      register: ns
      ignore_errors: true

    - name: Pushes new resolver configuration if resolver fails
      lineinfile:
        regexp: "^nameserver "
        line: "nameserver 8.8.8.8"
        dest: /etc/resolv.conf
      when: ns is failed

    - name: Checks if resolver is working properly with new nameserver
      command: host -t A ansible.cc

    - name: Final greeting
      pause:
        seconds: 1
        echo: false
        prompt: "Well done! You will be able to continue this tutorial. Stay relax and keep learning. Cheers"
